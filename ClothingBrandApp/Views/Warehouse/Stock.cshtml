@using ClothingBrandApp.Web.ViewModels.Warehouse
@model WarehouseStockViewModel

@{
    ViewData["Title"] = "Clothing Warehouses";
}

@section Styles {
    <link rel="stylesheet" href="~/css/user.css" />
}

<div class="warehouse-bg bg-dark text-light">
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div>
                <h1 class="text-light fw-bold">@Model.WarehouseName</h1>
                <p class="text-muted fst-italic mb-0">
                    Managed by: @Model.WarehouseManager
                </p>
            </div>
            <div class="d-flex flex-column gap-2 align-items-end">
                <a asp-controller="Warehouse" asp-action="Index" class="btn btn-secondary fw-bold">
                    <i class="bi bi-arrow-left"></i> Back to Warehouses
                </a>
                <a asp-area="Admin"
                   asp-controller="ProductManagement"
                   asp-action="Create"
                   asp-route-warehouseId="@Model.WarehouseId"
                   class="btn btn-success fw-bold">
                    <i class="bi bi-plus-circle"></i> Add Product
                </a>
            </div>
        </div>

        @if (!Model.WarehouseProducts.Any())
        {
            <div class="alert alert-warning text-center">
                No products are currently stored in this warehouse.
            </div>
        }
        else
        {
            <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-3" id="warehouseContainer">
                @foreach (var product in Model.WarehouseProducts)
                {
                    <div class="col product-card">
                        <div class="card shadow-lg border-0 rounded-3 h-100 warehouse-stock-card p-3">
                            <img src="@product.ImageUrl"
                                 class="product-card-img-top img-fluid rounded"
                                 alt="@product.Name"
                                 style="height: 250px; object-fit: cover;">

                            <div class="card-body text-center">
                                <h6 class="card-title fw-bold text-dark">@product.Name</h6>

                                <p class="card-text text-muted small">
                                    @if (product.InStock)
                                    {
                                        <span class="text-success">In Stock</span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">Out of Stock</span>
                                    }
                                </p>

                                <p class="fw-bold text-dark">Price: $@product.Price.ToString("F2")</p>

                                <div class="d-flex flex-column gap-2 mt-3">
                                    <button class="btn btn-primary rounded-pill view-details-btn fw-bold"
                                            data-product-id="@product.Id"
                                            data-product-name="@product.Name"
                                            data-product-price="@product.Price.ToString("F2")"
                                            data-product-stock="@(product.InStock ? "In Stock" : "Out of Stock")"
                                            data-product-image="@product.ImageUrl"
                                            data-product-gender="@product.Gender"
                                            data-warehouse-id="@Model.WarehouseId">
                                        <i class="fas fa-eye"></i> View Details
                                    </button>

                                    <a asp-area="Admin"
                                       asp-controller="ProductManagement"
                                       asp-action="ToggleDelete"
                                       asp-route-id="@product.Id"
                                       asp-route-warehouseId="@Model.WarehouseId"
                                       class="btn @(product.IsDeleted ? "btn-outline-success" : "btn-outline-danger") rounded-pill fw-bold">
                                        <i class="bi @(product.IsDeleted ? "bi-arrow-counterclockwise" : "bi-trash")"></i>
                                        @(product.IsDeleted ? "Restore Product" : "Remove Product")
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<!-- Product Details Modal -->
<div class="modal fade" id="productDetailsModal" tabindex="-1" aria-labelledby="productDetailsLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="productDetailsLabel">Product Details</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body bg-light text-dark">
                <div id="productDetailsContent" class="p-3">
                    <!-- Populated by JS -->
                </div>
            </div>
            <div class="modal-footer bg-white">
                <a id="editProductBtn" class="btn btn-warning fw-bold">
                    <i class="bi bi-pencil-square"></i> Edit
                </a>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.view-details-btn').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-product-id');
                const name = this.getAttribute('data-product-name');
                const price = this.getAttribute('data-product-price');
                const stock = this.getAttribute('data-product-stock');
                const image = this.getAttribute('data-product-image');
                const gender = this.getAttribute('data-product-gender');
                const warehouseId = this.getAttribute('data-warehouse-id');

                const content = `
                    <div class="row">
                        <div class="col-md-5 text-center">
                            <img src="${image}" class="img-fluid rounded mb-3" alt="${name}" />
                        </div>
                        <div class="col-md-7">
                            <h4>${name}</h4>
                            <p><strong>Product ID:</strong> ${productId}</p>
                            <p><strong>Price:</strong> $${price}</p>
                            <p><strong>Status:</strong> ${stock}</p>
                            <p><strong>Gender:</strong> ${gender}</p>
                        </div>
                    </div>
                `;

                document.getElementById('productDetailsContent').innerHTML = content;
                document.getElementById('editProductBtn').setAttribute('href', `/Admin/ProductManagement/Edit/${productId}?warehouseId=${warehouseId}`);

                new bootstrap.Modal(document.getElementById('productDetailsModal')).show();
            });
        });
    </script>
}